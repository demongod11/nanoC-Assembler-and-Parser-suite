<KEYWORD, 1, void>
<IDENTIFIER, 2, swap>
<PUNCTUATOR, 6, (>
<KEYWORD, 1, int>
<PUNCTUATOR, 6, *>
<IDENTIFIER, 2, p>
<PUNCTUATOR, 6, ,>
<KEYWORD, 1, int>
<PUNCTUATOR, 6, *>
<IDENTIFIER, 2, q>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, ;>
<KEYWORD, 1, char>
<IDENTIFIER, 2, a>
<PUNCTUATOR, 6, =>
<CHAR CONST, 4, b>
<PUNCTUATOR, 6, ;>
<KEYWORD, 1, int>
<IDENTIFIER, 2, zb>
<PUNCTUATOR, 6, =>
<INTEGER CONST, 3, -500>
<PUNCTUATOR, 6, ;>
<KEYWORD, 1, int>
<IDENTIFIER, 2, main>
<PUNCTUATOR, 6, (>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, {>
<KEYWORD, 1, int>
<IDENTIFIER, 2, x>
<PUNCTUATOR, 6, =>
<INTEGER CONST, 3, 30>
<PUNCTUATOR, 6, ;>
<KEYWORD, 1, int>
<IDENTIFIER, 2, y>
<PUNCTUATOR, 6, =>
<INTEGER CONST, 3, 20>
<PUNCTUATOR, 6, ;>
<IDENTIFIER, 2, x>
<PUNCTUATOR, 6, =>
<IDENTIFIER, 2, x>
<PUNCTUATOR, 6, +>
<IDENTIFIER, 2, y>
<PUNCTUATOR, 6, ;>
<KEYWORD, 1, if>
<PUNCTUATOR, 6, (>
<IDENTIFIER, 2, x>
<PUNCTUATOR, 6, <=>
<INTEGER CONST, 3, 20>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, {>
<KEYWORD, 1, return>
<INTEGER CONST, 3, 20>
<PUNCTUATOR, 6, ;>
<PUNCTUATOR, 6, }>
<IDENTIFIER, 2, swap>
<PUNCTUATOR, 6, (>
<PUNCTUATOR, 6, &>
<IDENTIFIER, 2, x>
<PUNCTUATOR, 6, ,>
<PUNCTUATOR, 6, &>
<IDENTIFIER, 2, y>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, ;>
<KEYWORD, 1, char>
<IDENTIFIER, 2, c>
<PUNCTUATOR, 6, =>
<CHAR CONST, 4, a>
<PUNCTUATOR, 6, ;>
<KEYWORD, 1, char>
<IDENTIFIER, 2, str>
<PUNCTUATOR, 6, [>
<INTEGER CONST, 3, 5>
<PUNCTUATOR, 6, ]>
<PUNCTUATOR, 6, =>
<STRING, 5, check>
<PUNCTUATOR, 6, ;>
<KEYWORD, 1, int>
<IDENTIFIER, 2, n>
<PUNCTUATOR, 6, =>
<INTEGER CONST, 3, 10>
<PUNCTUATOR, 6, ;>
<KEYWORD, 1, int>
<IDENTIFIER, 2, r>
<PUNCTUATOR, 6, ;>
<IDENTIFIER, 2, r>
<PUNCTUATOR, 6, =>
<IDENTIFIER, 2, rec>
<PUNCTUATOR, 6, (>
<IDENTIFIER, 2, n>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, ;>
<IDENTIFIER, 2, printStr>
<PUNCTUATOR, 6, (>
<STRING, 5, fibo(>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, ;>
<IDENTIFIER, 2, printInt>
<PUNCTUATOR, 6, (>
<IDENTIFIER, 2, n>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, ;>
<IDENTIFIER, 2, printStr>
<PUNCTUATOR, 6, (>
<STRING, 5, ) = >
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, ;>
<IDENTIFIER, 2, printInt>
<PUNCTUATOR, 6, (>
<IDENTIFIER, 2, r>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, ;>
<KEYWORD, 1, return>
<INTEGER CONST, 3, 0>
<PUNCTUATOR, 6, ;>
<KEYWORD, 1, return>
<INTEGER CONST, 3, 0>
<PUNCTUATOR, 6, ;>
<PUNCTUATOR, 6, }>
<KEYWORD, 1, void>
<IDENTIFIER, 2, swap>
<PUNCTUATOR, 6, (>
<KEYWORD, 1, int>
<PUNCTUATOR, 6, *>
<IDENTIFIER, 2, p>
<PUNCTUATOR, 6, ,>
<KEYWORD, 1, int>
<PUNCTUATOR, 6, *>
<IDENTIFIER, 2, q>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, {>
<MULTILINE COMMENT, 8, /* Swap two numbers */>
<KEYWORD, 1, int>
<IDENTIFIER, 2, t>
<PUNCTUATOR, 6, =>
<PUNCTUATOR, 6, *>
<IDENTIFIER, 2, p>
<PUNCTUATOR, 6, ;>
<PUNCTUATOR, 6, *>
<IDENTIFIER, 2, p>
<PUNCTUATOR, 6, =>
<PUNCTUATOR, 6, *>
<IDENTIFIER, 2, q>
<PUNCTUATOR, 6, ;>
<PUNCTUATOR, 6, *>
<IDENTIFIER, 2, q>
<PUNCTUATOR, 6, =>
<IDENTIFIER, 2, t>
<PUNCTUATOR, 6, ;>
<PUNCTUATOR, 6, }>
<KEYWORD, 1, void>
<IDENTIFIER, 2, random_func>
<PUNCTUATOR, 6, (>
<KEYWORD, 1, int>
<IDENTIFIER, 2, n>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, {>
<MULTILINE COMMENT, 8, /* A function to implement bubble sort */>
<KEYWORD, 1, int>
<IDENTIFIER, 2, i>
<PUNCTUATOR, 6, ;>
<KEYWORD, 1, int>
<IDENTIFIER, 2, j>
<PUNCTUATOR, 6, ;>
<KEYWORD, 1, for>
<PUNCTUATOR, 6, (>
<IDENTIFIER, 2, i>
<PUNCTUATOR, 6, =>
<INTEGER CONST, 3, 0>
<PUNCTUATOR, 6, ;>
<IDENTIFIER, 2, i>
<PUNCTUATOR, 6, <>
<IDENTIFIER, 2, n>
<PUNCTUATOR, 6, ->
<INTEGER CONST, 3, 1>
<PUNCTUATOR, 6, ;>
<IDENTIFIER, 2, i>
<PUNCTUATOR, 6, =>
<IDENTIFIER, 2, i>
<PUNCTUATOR, 6, +>
<INTEGER CONST, 3, 1>
<PUNCTUATOR, 6, )>
<SINGLE LINE COMMENT, 7, // Last i elements are already in place><KEYWORD, 1, for>
<PUNCTUATOR, 6, (>
<IDENTIFIER, 2, j>
<PUNCTUATOR, 6, =>
<INTEGER CONST, 3, 0>
<PUNCTUATOR, 6, ;>
<IDENTIFIER, 2, j>
<PUNCTUATOR, 6, <>
<IDENTIFIER, 2, n>
<PUNCTUATOR, 6, ->
<IDENTIFIER, 2, i>
<PUNCTUATOR, 6, ->
<INTEGER CONST, 3, 1>
<PUNCTUATOR, 6, ;>
<IDENTIFIER, 2, j>
<PUNCTUATOR, 6, =>
<IDENTIFIER, 2, j>
<PUNCTUATOR, 6, +>
<INTEGER CONST, 3, 1>
<PUNCTUATOR, 6, )>
<KEYWORD, 1, if>
<PUNCTUATOR, 6, (>
<IDENTIFIER, 2, arr>
<PUNCTUATOR, 6, [>
<IDENTIFIER, 2, j>
<PUNCTUATOR, 6, ]>
<PUNCTUATOR, 6, >>
<IDENTIFIER, 2, arr>
<PUNCTUATOR, 6, [>
<IDENTIFIER, 2, j>
<PUNCTUATOR, 6, +>
<INTEGER CONST, 3, 1>
<PUNCTUATOR, 6, ]>
<PUNCTUATOR, 6, )>
<IDENTIFIER, 2, swap>
<PUNCTUATOR, 6, (>
<PUNCTUATOR, 6, &>
<IDENTIFIER, 2, arr>
<PUNCTUATOR, 6, [>
<IDENTIFIER, 2, j>
<PUNCTUATOR, 6, ]>
<PUNCTUATOR, 6, ,>
<PUNCTUATOR, 6, &>
<IDENTIFIER, 2, arr>
<PUNCTUATOR, 6, [>
<IDENTIFIER, 2, j>
<PUNCTUATOR, 6, +>
<INTEGER CONST, 3, 1>
<PUNCTUATOR, 6, ]>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, ;>
<PUNCTUATOR, 6, }>
<KEYWORD, 1, int>
<IDENTIFIER, 2, odd_case>
<PUNCTUATOR, 6, (>
<KEYWORD, 1, int>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, ;>
<KEYWORD, 1, int>
<IDENTIFIER, 2, even_case>
<PUNCTUATOR, 6, (>
<KEYWORD, 1, int>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, ;>
<KEYWORD, 1, int>
<IDENTIFIER, 2, rec>
<PUNCTUATOR, 6, (>
<KEYWORD, 1, int>
<IDENTIFIER, 2, n>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, {>
<KEYWORD, 1, return>
<PUNCTUATOR, 6, (>
<IDENTIFIER, 2, n>
<PUNCTUATOR, 6, %>
<INTEGER CONST, 3, 2>
<PUNCTUATOR, 6, ==>
<INTEGER CONST, 3, 0>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, ?>
<IDENTIFIER, 2, even_case>
<PUNCTUATOR, 6, (>
<IDENTIFIER, 2, n>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, :>
<IDENTIFIER, 2, odd_case>
<PUNCTUATOR, 6, (>
<IDENTIFIER, 2, n>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, ;>
<PUNCTUATOR, 6, }>
<KEYWORD, 1, int>
<IDENTIFIER, 2, odd_case>
<PUNCTUATOR, 6, (>
<KEYWORD, 1, int>
<IDENTIFIER, 2, n>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, {>
<KEYWORD, 1, return>
<PUNCTUATOR, 6, (>
<IDENTIFIER, 2, n>
<PUNCTUATOR, 6, ==>
<INTEGER CONST, 3, 1>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, ?>
<INTEGER CONST, 3, 1>
<PUNCTUATOR, 6, :>
<IDENTIFIER, 2, even_case>
<PUNCTUATOR, 6, (>
<IDENTIFIER, 2, n>
<INTEGER CONST, 3, -1>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, +>
<IDENTIFIER, 2, odd_case>
<PUNCTUATOR, 6, (>
<IDENTIFIER, 2, n>
<INTEGER CONST, 3, -2>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, ;>
<PUNCTUATOR, 6, }>
<KEYWORD, 1, int>
<IDENTIFIER, 2, even_case>
<PUNCTUATOR, 6, (>
<KEYWORD, 1, int>
<IDENTIFIER, 2, n>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, {>
<KEYWORD, 1, return>
<PUNCTUATOR, 6, (>
<IDENTIFIER, 2, n>
<PUNCTUATOR, 6, ==>
<INTEGER CONST, 3, 0>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, ?>
<INTEGER CONST, 3, 0>
<PUNCTUATOR, 6, :>
<IDENTIFIER, 2, odd_case>
<PUNCTUATOR, 6, (>
<IDENTIFIER, 2, n>
<INTEGER CONST, 3, -1>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, +>
<IDENTIFIER, 2, even_case>
<PUNCTUATOR, 6, (>
<IDENTIFIER, 2, n>
<INTEGER CONST, 3, -2>
<PUNCTUATOR, 6, )>
<PUNCTUATOR, 6, ;>
<PUNCTUATOR, 6, }>
